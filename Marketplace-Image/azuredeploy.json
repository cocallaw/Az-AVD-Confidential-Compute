{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "The name of the administrator account to be created on the new VMs."
            }
        },
        "authenticationType": {
            "type": "string",
            "defaultValue": "password",
            "allowedValues": [
                "password",
                "sshPublicKey"
            ],
            "metadata": {
                "description": "Type of authentication to use on the Virtual Machine."
            }
        },
        "adminPasswordOrKey": {
            "type": "secureString",
            "metadata": {
                "description": "Password or SSH key for the administrator account on the new VMs."
            }
        },
        "virtualMachineBaseName": {
            "type": "string",
            "defaultValue": "accvm",
            "maxLength": 10,
            "metadata": {
                "description": "Virtual machine name, will be either incrimented or appended to for the creation of related supporting resources."
            }
        },
        "numberOfACCVMs": {
            "type": "int",
            "defaultValue": 1,
            "maxValue": 50,
            "minValue": 1,
            "metadata": {
                "description": "Number of Confidential VMs to deploy"
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_DC2as_v5",
            "allowedValues": [
                "Standard_DC2as_v5",
                "Standard_DC4as_v5",
                "Standard_DC8as_v5",
                "Standard_DC16as_v5",
                "Standard_DC32as_v5",
                "Standard_DC48as_v5",
                "Standard_DC64as_v5",
                "Standard_DC96as_v5",
                "Standard_DC2ads_v5",
                "Standard_DC4ads_v5",
                "Standard_DC8ads_v5",
                "Standard_DC16ads_v5",
                "Standard_DC32ads_v5",
                "Standard_DC48ads_v5",
                "Standard_DC64ads_v5",
                "Standard_DC96ads_v5"
            ],
            "metadata": {
                "description": "Size of the VM to create."
            }
        },
        "osImageName": {
            "type": "string",
            "defaultValue": "Windows 11 Enterprise 23H2 Gen 2",
            "allowedValues": [
                "Windows 11 Enterprise 22H2 Gen 2",
                "Windows 11 Enterprise 23H2 Gen 2",
                "Windows Server 2022 Gen 2",
                "Windows Server 2019 Gen 2",
                "Ubuntu 20.04 LTS Gen 2"
            ],
            "metadata": {
                "description": "OS Image to be used to create the VM."
            }
        },
        "existingVirtualNetworkResourceGroup": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Resource Group of the existing Virtual Network."
            }
        },
        "existingVirtualNetworkName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the existing Virtual Network."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Name of the existing Subnet."
            }
        },
        "securityType": {
            "type": "string",
            "defaultValue": "DiskWithVMGuestState",
            "allowedValues": [
                "VMGuestStateOnly",
                "DiskWithVMGuestState"
            ],
            "metadata": {
                "description": "Selecting DiskWithVMGuestState will enable Confidential OS Disk Encryption."
            }
        },
        "objectIDConfidentialOrchestrator": {
            "type": "secureString",
            "metadata": {
                "description": "Object ID of the Confidential VM Orchestrator Service Principal"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources, defaults to Resource Group location."
            }
        },
        "timeUnique": {
            "type": "string",
            "defaultValue": "[utcNow('hhmmss')]",
            "metadata": {
                "description": "Using the current deployment time to generate unique string for resource naming such as the Azure Key Vault name."
            }
        }
    },
    "variables": {
        "subnetId": "[resourceId(parameters('existingVirtualNetworkResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('existingVirtualNetworkName'), parameters('existingSubnetName'))]",
        "keyVaultName": "[format('AKV-{0}', uniqueString(resourceGroup().id, parameters('timeUnique')))]",
        "diskEncryptSetName": "DES-01",
        "imageReference": "[variables('imageList')[parameters('osImageName')]]",
        "imageList": {
            "Windows 11 Enterprise 22H2 Gen 2": {
                "publisher": "microsoftwindowsdesktop",
                "offer": "windows-11",
                "sku": "win11-22h2-ent",
                "version": "latest"
            },
            "Windows 11 Enterprise 23H2 Gen 2": {
                "publisher": "microsoftwindowsdesktop",
                "offer": "windows-11",
                "sku": "win11-23h2-ent",
                "version": "latest"
            },
            "Windows Server 2022 Gen 2": {
                "publisher": "microsoftwindowsserver",
                "offer": "windowsserver",
                "sku": "2022-datacenter-smalldisk-g2",
                "version": "latest"
            },
            "Windows Server 2019 Gen 2": {
                "publisher": "microsoftwindowsserver",
                "offer": "windowsserver",
                "sku": "2019-datacenter-smalldisk-g2",
                "version": "latest"
            },
            "Ubuntu 20.04 LTS Gen 2": {
                "publisher": "Canonical",
                "offer": "0001-com-ubuntu-confidential-vm-focal",
                "sku": "20_04-lts-cvm",
                "version": "latest"
            }
        },
        "isWindows": "[contains(parameters('osImageName'), 'Windows')]",
        "windowsConfiguration": {
            "enableAutomaticUpdates": "true",
            "provisionVmAgent": "true"
        },
        "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
                "publicKeys": [
                    {
                        "keyData": "[parameters('adminPasswordOrKey')]",
                        "path": "[format('/home/{0}/.ssh/authorized_keys', parameters('adminUsername'))]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "AVD-Host-Creation",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "numberOfACCVMs": {
                        "value": "[parameters('numberOfACCVMs')]"
                    },
                    "virtualMachineBaseName": {
                        "value": "[parameters('virtualMachineBaseName')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "imageReference": {
                        "value": "[variables('imageReference')]"
                    },
                    "subnetId": {
                        "value": "[variables('subnetId')]"
                    },
                    "diskEncryptSetName": {
                        "value": "[variables('diskEncryptSetName')]"
                    },
                    "securityType": {
                        "value": "[parameters('securityType')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {},
                    "parameters": {
                        "numberOfACCVMs": {
                            "type": "int"
                        },
                        "virtualMachineBaseName": {
                            "type": "string"
                        },
                        "vmSize": {
                            "type": "string"
                        },
                        "imageReference": {
                            "type": "object"
                        },
                        "subnetId": {
                            "type": "string"
                        },
                        "diskEncryptSetName": {
                            "type": "string"
                        },
                        "securityType": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        }
                    },
                    "variables": {},
                    "resources": [
                        {
                            "copy": {
                                "name": "NetworkInterfaces",
                                "count": "[length(range(0, parameters('numberOfACCVMs')))]"
                            },
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2019-02-01",
                            "name": "[format('{0}-nic-{1}', parameters('virtualMachineBaseName'), range(0, parameters('numberOfACCVMs'))[copyIndex()])]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipconfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Dynamic",
                                            "subnet": {
                                                "id": "[parameters('subnetId')]"
                                            }
                                        }
                                    }
                                ]
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.Resources/deployments', 'DiskEncryption')]"
                            ]
                        },
                        {
                            "copy": {
                                "name": "virtualMachineBaseName_resource",
                                "count": "[length(range(0, parameters('numberOfACCVMs')))]"
                            },
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2021-11-01",
                            "name": "[format('{0}-{1}', parameters('virtualMachineBaseName'), range(0, parameters('numberOfACCVMs'))[copyIndex()])]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('vmSize')]"
                                },
                                "storageProfile": {
                                    "imageReference": "[parameters('imageReference')]",
                                    "osDisk": {
                                        "name": "[format('{0}-{1}-osdisk', parameters('virtualMachineBaseName'), range(0, parameters('numberOfACCVMs'))[copyIndex()])]",
                                        "caching": "ReadWrite",
                                        "createOption": "FromImage",
                                        "managedDisk": {
                                            "storageAccountType": "Premium_LRS",
                                            "securityProfile": {
                                                "diskEncryptionSet": {
                                                    "id": "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptSetName'))]"
                                                },
                                                "securityEncryptionType": "[parameters('securityType')]"
                                            }
                                        }
                                    },
                                    "dataDisks": []
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[resourceId('Microsoft.Network/networkInterfaces', format('{0}-nic-{1}', parameters('virtualMachineBaseName'), range(0, parameters('numberOfACCVMs'))[copyIndex()]))]"
                                        }
                                    ]
                                },
                                "osProfile": {
                                    "computerName": "[format('{0}-{1}', parameters('virtualMachineBaseName'), range(0, parameters('numberOfACCVMs'))[copyIndex()])]",
                                    "adminUsername": "[parameters('adminUsername')]",
                                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]",
                                    "windowsConfiguration": "[if(variables('isWindows'), variables('windowsConfiguration'), json('null'))]"
                                },
                                "securityProfile": {
                                    "securityType": "ConfidentialVM",
                                    "uefiSettings": {
                                        "secureBootEnabled": true,
                                        "vTpmEnabled": true
                                    }
                                }
                            },
                            "dependsOn": [
                                "NetworkInterfaces"
                            ]
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'DiskEncryption')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "AVD-Host-Configuration",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "numberOfACCVMs": {
                        "value": "[parameters('numberOfACCVMs')]"
                    },
                    "virtualMachineBaseName": {
                        "value": "[parameters('virtualMachineBaseName')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {},
                    "parameters": {
                        "numberOfACCVMs": {
                            "type": "int"
                        },
                        "virtualMachineBaseName": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        }
                    },
                    "variables": {},
                    "resources": [
                        {
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2018-10-01",
                            "name": "[concat(format('{0}-{1}', parameters('virtualMachineName'), add(range(1, parameters('numberOfVMs'))[copyIndex()], parameters('existingNumberofVMs'))),'/GuestAttestation')]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [
                                "VM-Loop"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Azure.Security.WindowsAttestation",
                                "type": "GuestAttestation",
                                "typeHandlerVersion": "1.0",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "AttestationConfig": {
                                        "MaaSettings": {
                                            "maaEndpoint": "",
                                            "maaTenantName": "GuestAttestation"
                                        },
                                        "AscSettings": {
                                            "ascReportingEndpoint": "",
                                            "ascReportingFrequency": ""
                                        },
                                        "useCustomToken": "false",
                                        "disableAlerts": "false"
                                    }
                                }
                            },
                            "copy": {
                                "name": "VM-attestation-loop",
                                "count": "[length(range(1, parameters('numberOfVMs')))]"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2021-07-01",
                            "name": "[concat(format('{0}-{1}', parameters('virtualMachineName'), add(range(1, parameters('numberOfVMs'))[copyIndex()], parameters('existingNumberofVMs'))), '/Microsoft.PowerShell.DSC')]",
                            "location": "[resourceGroup().location]",
                            "dependsOn": [
                                "VM-attestation-loop"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Powershell",
                                "type": "DSC",
                                "typeHandlerVersion": "2.73",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "modulesUrl": "[parameters('artifactsLocation')]",
                                    "configurationFunction": "Configuration.ps1\\AddSessionHost",
                                    "properties": {
                                        "hostPoolName": "[parameters('hostpoolName')]",
                                        "registrationInfoTokenCredential": {
                                            "UserName": "PLACEHOLDER_DO_NOT_USE",
                                            "Password": "PrivateSettingsRef:RegistrationInfoToken"
                                        },
                                        "aadJoin": "[variables('aadJoin')]",
                                        "UseAgentDownloadEndpoint": true,
                                        "aadJoinPreview": "[variables('aadJoinPreview')]",
                                        "mdmId": "[if(parameters('intune'), '0000000a-0000-0000-c000-000000000000', '')]",
                                        "sessionHostConfigurationLastUpdateTime": ""
                                    }
                                },
                                "protectedSettings": {
                                    "Items": {
                                        "RegistrationInfoToken": "[parameters('hostpoolToken')]"
                                    }
                                }
                            },
                            "copy": {
                                "name": "VM-DSCLoop",
                                "count": "[length(range(1, parameters('numberOfVMs')))]"
                            }
                        },
                        {
                            "copy": {
                                "name": "AADLoginExtension-Loop",
                                "count": "[length(range(1, parameters('numberOfVMs')))]"
                            },
                            "name": "[concat(format('{0}-{1}', parameters('virtualMachineName'), add(range(1, parameters('numberOfVMs'))[copyIndex()], parameters('existingNumberofVMs'))), '/AADLoginForWindows')]",
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2021-07-01",
                            "location": "[resourceGroup().location]",
                            "properties": {
                                "publisher": "Microsoft.Azure.ActiveDirectory",
                                "type": "AADLoginForWindows",
                                "typeHandlerVersion": "2.0",
                                "autoUpgradeMinorVersion": true,
                                "settings": "[if(parameters('intune'), createObject('mdmId','0000000a-0000-0000-c000-000000000000'), json('null'))]"
                            },
                            "dependsOn": [
                                "VM-DSCLoop"
                            ]
                        }
                    ]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'AVD-Host-Creation')]"
            ]
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "name": "DiskEncryption",
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                    "diskEncryptSetName": {
                        "value": "[variables('diskEncryptSetName')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "objectIDConfidentialOrchestrator": {
                        "value": "[parameters('objectIDConfidentialOrchestrator')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "metadata": {},
                    "parameters": {
                        "location": {
                            "type": "string",
                            "defaultValue": "[resourceGroup().location]",
                            "metadata": {
                                "description": "Location for all resources."
                            }
                        },
                        "diskEncryptSetName": {
                            "type": "string",
                            "defaultValue": "DES-01",
                            "metadata": {
                                "description": "Name of Disk Encryption Set"
                            }
                        },
                        "keyVaultName": {
                            "type": "string",
                            "metadata": {
                                "description": "Name of Azure Key Vault"
                            }
                        },
                        "objectIDConfidentialOrchestrator": {
                            "type": "secureString",
                            "metadata": {
                                "description": "Object ID of the Confidential VM Orchestrator Service Principal"
                            }
                        }
                    },
                    "variables": {
                        "keyVaultSku": "premium",
                        "keyName": "acckey01",
                        "cvmoRBACRoleName": "Key Vault Crypto Service Release User",
                        "desRBACRoleName": "Key Vault Crypto User",
                        "roleIdMapping": {
                            "Key Vault Crypto Service Release User": "08bbd89e-9f13-488c-ac41-acfcb10c90ab",
                            "Key Vault Crypto User": "12338af0-0e69-4776-bea7-57ae8d297424",
                            "Key Vault Secrets User": "4633458b-17de-408a-b874-0445c86b69e6"
                        },
                        "policyType": "application/json; charset=utf-8",
                        "policyData": "ewogICJhbnlPZiI6IFsKICAgIHsKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWF0dGVzdGF0aW9uLXR5cGUiLAogICAgICAgICAgImVxdWFscyI6ICJzZXZzbnB2bSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWNvbXBsaWFuY2Utc3RhdHVzIiwKICAgICAgICAgICJlcXVhbHMiOiAiYXp1cmUtY29tcGxpYW50LWN2bSIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhdXRob3JpdHkiOiAiaHR0cHM6Ly9zaGFyZWRldXMuZXVzLmF0dGVzdC5henVyZS5uZXQvIgogICAgfSwKICAgIHsKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWF0dGVzdGF0aW9uLXR5cGUiLAogICAgICAgICAgImVxdWFscyI6ICJzZXZzbnB2bSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWNvbXBsaWFuY2Utc3RhdHVzIiwKICAgICAgICAgICJlcXVhbHMiOiAiYXp1cmUtY29tcGxpYW50LWN2bSIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhdXRob3JpdHkiOiAiaHR0cHM6Ly9zaGFyZWR3dXMud3VzLmF0dGVzdC5henVyZS5uZXQvIgogICAgfSwKICAgIHsKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWF0dGVzdGF0aW9uLXR5cGUiLAogICAgICAgICAgImVxdWFscyI6ICJzZXZzbnB2bSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWNvbXBsaWFuY2Utc3RhdHVzIiwKICAgICAgICAgICJlcXVhbHMiOiAiYXp1cmUtY29tcGxpYW50LWN2bSIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhdXRob3JpdHkiOiAiaHR0cHM6Ly9zaGFyZWRuZXUubmV1LmF0dGVzdC5henVyZS5uZXQvIgogICAgfSwKICAgIHsKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWF0dGVzdGF0aW9uLXR5cGUiLAogICAgICAgICAgImVxdWFscyI6ICJzZXZzbnB2bSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWNvbXBsaWFuY2Utc3RhdHVzIiwKICAgICAgICAgICJlcXVhbHMiOiAiYXp1cmUtY29tcGxpYW50LWN2bSIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhdXRob3JpdHkiOiAiaHR0cHM6Ly9zaGFyZWR3ZXUud2V1LmF0dGVzdC5henVyZS5uZXQvIgogICAgfSwKICAgIHsKICAgICAgImFsbE9mIjogWwogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWF0dGVzdGF0aW9uLXR5cGUiLAogICAgICAgICAgImVxdWFscyI6ICJzZXZzbnB2bSIKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgICJjbGFpbSI6ICJ4LW1zLWNvbXBsaWFuY2Utc3RhdHVzIiwKICAgICAgICAgICJlcXVhbHMiOiAiYXp1cmUtY29tcGxpYW50LWN2bSIKICAgICAgICB9CiAgICAgIF0sCiAgICAgICJhdXRob3JpdHkiOiAiaHR0cHM6Ly9zaGFyZWRldXMyLmV1czIuYXR0ZXN0LmF6dXJlLm5ldC8iCiAgICB9CiAgXSwKICAidmVyc2lvbiI6ICIxLjAuMCIKfQ"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.KeyVault/vaults",
                            "apiVersion": "2021-11-01-preview",
                            "name": "[parameters('keyVaultName')]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "enableRbacAuthorization": true,
                                "enableSoftDelete": true,
                                "enablePurgeProtection": true,
                                "enabledForDeployment": false,
                                "enabledForDiskEncryption": true,
                                "enabledForTemplateDeployment": true,
                                "publicNetworkAccess": "Disabled",
                                "tenantId": "[subscription().tenantId]",
                                "sku": {
                                    "name": "[variables('keyVaultSku')]",
                                    "family": "A"
                                },
                                "networkAcls": {
                                    "defaultAction": "Deny",
                                    "bypass": "AzureServices"
                                }
                            }
                        },
                        {
                            "type": "Microsoft.KeyVault/vaults/keys",
                            "apiVersion": "2021-11-01-preview",
                            "name": "[format('{0}/{1}', parameters('keyVaultName'), variables('keyName'))]",
                            "location": "[parameters('location')]",
                            "properties": {
                                "attributes": {
                                    "enabled": true,
                                    "exportable": true
                                },
                                "keyOps": [
                                    "wrapKey",
                                    "unwrapKey"
                                ],
                                "keySize": 3072,
                                "kty": "RSA-HSM",
                                "release_policy": {
                                    "contentType": "[variables('policyType')]",
                                    "data": "[variables('policyData')]"
                                }
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Compute/diskEncryptionSets",
                            "apiVersion": "2021-12-01",
                            "name": "[parameters('diskEncryptSetName')]",
                            "location": "[parameters('location')]",
                            "identity": {
                                "type": "SystemAssigned"
                            },
                            "properties": {
                                "activeKey": {
                                    "sourceVault": {
                                        "id": "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                                    },
                                    "keyUrl": "[reference(resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), variables('keyName')), '2019-09-01', 'Full').properties.keyUriWithVersion]"
                                },
                                "encryptionType": "ConfidentialVmEncryptedWithCustomerKey"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.KeyVault/vaults/keys', parameters('keyVaultName'), variables('keyName'))]",
                                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-04-01-preview",
                            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                            "name": "[guid(variables('roleIdMapping')[variables('desRBACRoleName')], resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
                            "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIdMapping')[variables('desRBACRoleName')])]",
                                "principalId": "[reference(resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptSetName')), '2024-03-02', 'Full').identity.principalId]",
                                "principalType": "ServicePrincipal"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                                "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptSetName'))]"
                            ]
                        },
                        {
                            "type": "Microsoft.Authorization/roleAssignments",
                            "apiVersion": "2020-04-01-preview",
                            "scope": "[format('Microsoft.KeyVault/vaults/{0}', parameters('keyVaultName'))]",
                            "name": "[guid(variables('roleIdMapping')[variables('cvmoRBACRoleName')], parameters('objectIDConfidentialOrchestrator'), resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName')))]",
                            "properties": {
                                "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', variables('roleIdMapping')[variables('cvmoRBACRoleName')])]",
                                "principalId": "[parameters('objectIDConfidentialOrchestrator')]",
                                "principalType": "ServicePrincipal"
                            },
                            "dependsOn": [
                                "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]",
                                "[resourceId('Microsoft.Compute/diskEncryptionSets', parameters('diskEncryptSetName'))]"
                            ]
                        }
                    ]
                }
            }
        }
    ]
}